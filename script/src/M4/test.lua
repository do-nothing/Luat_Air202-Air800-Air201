---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by li.jun.
--- DateTime: 1/29/2018 5:01 PM
---

module(...,package.seeall)

require"aliyuniotssl"
require"misc"
require"audio"
require"common"

PRODUCT_KEY = "r7gAvsuXY2Y"
newsn = "Svp1Ak6I1Q1m29BB8leD821TXjbm71e9"  --air800
--newsn = "UdSfAzmAGfZ10ALLgHunHOhmIx5kouTQ"  --watch
local rdbuf = ""
local isPlay = false
local voiceList = {"0201"}

local function print(...)
    _G.print("guide info -->",...)
end

local function setsn()
    if misc.getsn() ~= newsn then
        misc.setsn(newsn)
    end
end

local function writeUart(port, s)
    local commandBins = common.hexstobins(s);
    uart.write(port,commandBins)
    print("write-->",common.binstohexs(commandBins, " "))
end

local function playVoice()
    if isPlay then return end
    if not voiceList or table.getn(voiceList) == 0 then return end
    print("play voice-->", voiceList[1])
    local command = "7EFF060F01"..voiceList[1].."EF"
    writeUart(1,command)
end

local function parse(data)
    if not data then return end

    local tail = string.find(data,string.char(0xEF))
    if not tail then return false,data end
    local cmdtyp = string.byte(data,4, 4)
    local body,result = string.sub(data,1,tail)
    print("parse",common.binstohexs(body, " "))

    if cmdtyp == 0x40 then
        isPlay = false
        playVoice()
    elseif cmdtyp == 0x41 then
        isPlay = true
    elseif isPlay and cmdtyp == 0x3D then
        isPlay = false
        table.remove(voiceList, 1)
        playVoice()
    end

    return true,string.sub(data,tail+1,-1)
end

local function proc(data)
    if not data or string.len(data) == 0 then return end
    --追加到缓冲区
    rdbuf = rdbuf..data

    local result,unproc
    unproc = rdbuf
    --根据帧结构循环解析未处理过的数据
    while true do
        result,unproc = parse(unproc)
        if not unproc or unproc == "" or not result then
            break
        end
    end
    rdbuf = unproc or ""
end

local function readUart()
    local data = ""
    while true do
        data = uart.read(1,"*l",0)
        if not data or string.len(data) == 0 then break end
        proc(data)
    end
end

local function procVolume(volume)
    if not volume then return end
    print("volume-->", volume)
    local command = "7EFF06060000"..common.binstohexs(string.char(volume)).."EF"
    writeUart(1,command)
end

local function procStop(flag)
    if not flag then return end
    print("stop flag-->", flag)
    isPlay = false
    voiceList = {}
    if flag==1 then
        local command = "7EFF0616000000FEE5EF"
        writeUart(1,command)
    end
end

local function procInsert(target)
    if not target then return end
    print("insert target-->", target, "isPlay-->", isPlay)
    if isPlay then
        table.insert(voiceList,2,target);
    else
        table.insert(voiceList,1,target);
        playVoice()
    end
end

local function playVoice()
    if isPlay then return end
    if not voiceList or table.getn(voiceList) == 0 then return end
    print("play voice-->", voiceList[1])
    local command = "7EFF060F01"..voiceList[1].."EF"
    writeUart(1,command)
end

local function procPlay(voiceGroup)
    if not voiceGroup then return end
    print("play-->", json.encode(voiceGroup))
    for key, value in ipairs(voiceGroup) do
        print(key, value, voiceGroup[key])
        table.insert(voiceList,value);
    end
    playVoice()
end

local function subackcb(usertag,result)
    print("subackcb:",usertag,result)
    procInsert("0202")
    audio.play(0,"FILE","/ldata/welcome_2.mp3",audiocore.VOL7)
end

local function rcvmessagecb(topic,payload,qos)
    print("rcvmessagecb:",topic,payload,qos)
    --aliyuniotssl.publish("/"..PRODUCT_KEY.."/"..misc.getimei().."/update","device receive:"..payload,qos)
    --audio.play(0,"FILE","/ldata/" .. payload .. ".mp3",audiocore.VOL7)
    local tjsondata,result,errinfo = json.decode(payload)
    if result then
        procVolume(tjsondata["volume"])
        procStop(tjsondata["stop"])
        procInsert(tjsondata["insert"])
        procPlay(tjsondata["play"])
    else
        print("json.decode error:",errinfo)
    end
end

local function connectedcb()
    print("connectedcb")
    --订阅主题
    aliyuniotssl.subscribe({{topic="/"..PRODUCT_KEY.."/"..misc.getimei().."/get",qos=0}, {topic="/"..PRODUCT_KEY.."/"..misc.getimei().."/get",qos=1}}, subackcb, "subscribegetopic")
    --注册事件的回调函数，MESSAGE事件表示收到了PUBLISH消息
    aliyuniotssl.regevtcb({MESSAGE=rcvmessagecb})
end

local function connecterrcb(r)
    print("connecterrcb:",r)
end

uart.setup(1,9600,8,uart.PAR_NONE,uart.STOP_1)
sys.reguart(1,readUart)
playVoice()
audio.play(0,"FILE","/ldata/welcome_1.mp3",audiocore.VOL7)

sys.timer_start(setsn,5000)
aliyuniotssl.config(PRODUCT_KEY)
aliyuniotssl.regcb(connectedcb,connecterrcb)